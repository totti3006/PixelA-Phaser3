/*! For license information please see main.0d72d69483c1707e1db8.bundle.js.LICENSE.txt */
(()=>{var e,t={829:(e,t,s)=>{"use strict";s(260);class i extends Phaser.Scene{constructor(){super({key:"BootScene"})}init(){}preload(){this.load.on("progress",(()=>{}),this),this.load.on("complete",(()=>{this.animationHelperInstance=new class{constructor(e,t){this.scene=e,this.animationData=t,this.createGameAnimations()}createGameAnimations(){for(let e of this.animationData.anims){let t,s=[];if("generateFrameNames"===e.frames.typeOfGeneration)t=this.scene.anims.generateFrameNames(e.frames.key,{prefix:e.frames.prefix||"",start:e.frames.start||0,end:e.frames.end||0,suffix:e.frames.suffix||"",zeroPad:e.frames.zeroPad||0,frames:e.frames.frames||!1});else if("generateFrameNumbers"===e.frames.typeOfGeneration)t=this.scene.anims.generateFrameNumbers(e.frames.key,{start:e.frames.start||0,end:e.frames.end||-1,first:e.frames.first||!1,frames:e.frames.frames||!1});else for(let t of e.frames){let e={key:t.key,frame:t.frame,duration:t.duration||0,visible:t.visible};s.push(e)}this.scene.anims.create({key:e.key,frames:t||s,defaultTextureKey:e.defaultTextureKey||null,frameRate:e.frameRate||24,duration:e.duration,skipMissedFrames:e.skipMissedFrames||!0,delay:e.delay||0,repeat:e.repeat||0,repeatDelay:e.repeatDelay||0,yoyo:e.yoyo||!1,showOnStart:e.showOnStart||!1,hideOnComplete:e.hideOnComplete||!1})}}}(this,this.cache.json.get("animationJSON"))}),this),this.load.pack("preload","./assets/pack.json","preload")}create(){this.scene.start("MenuScene")}}const a=i,h="room3",r=class{constructor(e){this.scene=e,this.scaleX=0,this.scaleY=0}alignBlocks(e){Phaser.Actions.GridAlign(e.getChildren(),{x:this.scene.cameras.main.worldView.x,y:this.scene.cameras.main.worldView.y,width:24,cellWidth:22,cellHeight:23})}playAnimation(e){let t=0;e.children.iterate((e=>{this.scene.tweens.add({targets:e,scaleX:this.scaleX,scaleY:this.scaleY,ease:"Power3",duration:200,delay:30+30*t}),t++,t%24==0&&(t=0)}))}transitionIn(){this.blocks=this.scene.add.group({key:"transition",repeat:312}),this.scaleX=0,this.scaleY=0,this.alignBlocks(this.blocks),this.playAnimation(this.blocks)}transitionOut(){this.blocks=this.scene.add.group({key:"transition",repeat:312,setScale:{x:0,y:0}}),this.scaleX=1,this.scaleY=1,this.alignBlocks(this.blocks),this.playAnimation(this.blocks)}};class n extends Phaser.GameObjects.Image{constructor(e,t,s,i,a){super(e,t,s,i,a),this.scene.add.existing(this),this.clickMovingRange=7,this.touchMovingRange=5,this.scaleRatio=1.2}initButton(e){return this.upTween=this.scene.add.tween({targets:this,y:{from:this.y,to:this.y+this.clickMovingRange},duration:100,paused:!0,yoyo:!0,repeat:0,onComplete:e}),this.moveTween=this.scene.add.tween({targets:this,y:{from:this.y,to:this.y+this.touchMovingRange},duration:100,paused:!0,yoyo:!0,repeat:0}),this.scaleUp=this.scene.add.tween({targets:this,scale:this.scaleRatio,duration:500,repeat:-1,yoyo:!0,ease:"Sine.easeInOut",paused:!0}),this}setClickMovingRange(e){return this.clickMovingRange=e,this}setTouchMovingRange(e){return this.touchMovingRange=e,this}setScaleRatio(e){return this.scaleRatio=e,this}playPointerUp(){return this.moveTween.stop(),this.upTween.play(),this}playPointerMove(){return this.upTween.isPlaying()||this.moveTween.play(),this}playScale(){return this.scaleUp.play(),this}stopScale(){return this.scaleUp.stop(),this}}const o=n;class l extends Phaser.Scene{constructor(){super({key:"HUDScene"}),this.handleRestart=()=>{this.registry.values.score=0,this.events.emit("scoreChanged"),this.transition.transitionOut(),this.time.delayedCall(750,(()=>{this.scene.manager.getScene("PlayScene").scene.restart(),this.scene.restart()}))},this.handleNext=()=>{this.registry.values.score=0,this.registry.set("room","room"+(1*this.registry.get("room").slice(4)+1)),this.events.emit("scoreChanged"),this.transition.transitionOut(),this.time.delayedCall(750,(()=>{this.scene.manager.getScene("PlayScene").scene.restart(),this.scene.restart()}))},this.handlePrev=()=>{this.registry.values.score=0,this.registry.set("room","room"+(1*this.registry.get("room").slice(4)-1)),this.events.emit("scoreChanged"),this.transition.transitionOut(),this.time.delayedCall(750,(()=>{this.scene.manager.getScene("PlayScene").scene.restart(),this.scene.restart()}))},this.updateScore=()=>{var e;null===(e=this.textElements.get("SCORE"))||void 0===e||e.setText(`Score ${this.registry.get("score")}`).setX(this.sys.canvas.width/2-4*(this.registry.get("score").toString().length-1))}}init(){this.transition=new r(this)}preload(){}create(){this.add.image(this.sys.canvas.width/2,24,"hud"),this.textElements=new Map([["LEVEL",this.addText(this.sys.canvas.width/2-120,16,`Room ${this.registry.get("room")[4]}`)],["SCORE",this.addText(this.sys.canvas.width/2-30,16,`Score ${this.registry.get("score")}`)]]),this.createButtons(),this.transition.transitionIn(),this.scene.get("PlayScene").events.on("scoreChanged",this.updateScore,this)}createButtons(){this.createRestartButton(),this.registry.get("room")!==h&&this.createNextButton(),"room1"!==this.registry.get("room")&&this.createPreviousButton()}createRestartButton(){this.restartButton=new o(this,this.sys.canvas.width/2+180,24,"button-restart"),this.restartButton.setClickMovingRange(2).setTouchMovingRange(1).initButton(this.handleRestart).setInteractive().on("pointerup",(e=>{this.restartButton.playPointerUp()})).on("pointermove",(e=>{this.restartButton.playPointerMove()}))}createNextButton(){this.nextButton=new o(this,this.restartButton.x-30,24,"button-next"),this.nextButton.setClickMovingRange(2).setTouchMovingRange(1).initButton(this.handleNext).setInteractive().on("pointerup",(e=>{this.nextButton.playPointerUp()})).on("pointermove",(e=>{this.nextButton.playPointerMove()}))}createPreviousButton(){this.prevButton=new o(this,this.restartButton.x-50,24,"button-previous"),this.prevButton.setClickMovingRange(2).setTouchMovingRange(1).initButton(this.handlePrev).setInteractive().on("pointerup",(e=>{this.prevButton.playPointerUp()})).on("pointermove",(e=>{this.prevButton.playPointerMove()}))}addText(e,t,s){return this.add.text(e,t,s).setOrigin(0,0)}}const c=l;class d extends Phaser.Scene{constructor(){super({key:"MenuScene"}),this.handleClickPlayButton=()=>{this.transition.transitionOut(),this.time.delayedCall(750,(()=>{this.scene.start("HUDScene"),this.scene.start("PlayScene"),this.scene.bringToTop("HUDScene")}))}}init(){this.startKey=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S),this.startKey.isDown=!1,this.transition=new r(this),this.initGlobalDataManager()}preload(){}create(){this.add.image(0,0,"title").setOrigin(0,0),this.playButton=new o(this,this.sys.canvas.width/2,this.sys.canvas.height/2-50,"button-play"),this.playButton.setScale(1.5).setScaleRatio(1.8).initButton(this.handleClickPlayButton).setInteractive().playScale().on("pointerup",(e=>{this.playButton.playPointerUp().stopScale()})).on("pointermove",(e=>{this.playButton.playPointerMove()}))}update(){this.startKey.isDown&&(this.scene.start("HUDScene"),this.scene.start("PlayScene"),this.scene.bringToTop("HUDScene"))}initGlobalDataManager(){this.registry.set("room","room1"),this.registry.set("score",0),this.registry.set("mapHeight",0)}}const p=d;class y extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.points=e.points,this.kind=e.texture,this.initSprite(),this.scene.add.existing(this)}initSprite(){this.setOrigin(0,0).setFrame(0),this.anims.play(`${this.kind}-anims`),this.scene.physics.world.enable(this),this.body.setSize(.5*this.width,.5*this.height).setAllowGravity(!1)}update(){}collected(){this.body.checkCollision.none=!0,this.scene.physics.world.disable(this),this.anims.play("collected-anims"),this.on(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{this.destroy()})),this.showAndAddScore(),this.scene.events.emit("scoreChanged")}showAndAddScore(){this.scene.registry.values.score+=this.points,this.scene.events.emit("scoreChanged");let e=this.scene.add.text(this.x,this.y-20,this.points.toString()).setOrigin(0,0);this.scene.add.tween({targets:e,props:{y:e.y-25},duration:800,ease:"Power0",yoyo:!1,onComplete:function(){e.destroy()}})}}const u=y;class m extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.scene=e.scene,this.boxContent=e.content,this.initSprite(),this.scene.add.existing(this)}getContent(){return this.content}getBoxContentString(){return this.boxContent}initSprite(){this.content=null,this.hitBoxTimeline=this.scene.tweens.createTimeline({}),this.setOrigin(0,0).setFrame(0),this.scene.physics.world.enable(this),this.body.setAllowGravity(!1).setImmovable(!0).setSize(.7*this.width,.8*this.height)}update(){}playHitAnims(){this.anims.play("box1-hit-anims"),this.on(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{this.destroy()}))}spawnBoxContent(){return this.content=new u({scene:this.scene,x:this.x,y:this.y,texture:this.boxContent,points:100}),this.content}tweenBoxContent(e,t,s){this.hitBoxTimeline.add({targets:this.content,props:e,delay:0,duration:t,ease:"Power0",onComplete:s})}popUpFruit(e){var t,s,i;let a=[-1,1][Phaser.Math.Between(0,1)];null===(t=this.content)||void 0===t||t.body.setVelocity(80*a,-100),null===(s=this.content)||void 0===s||s.body.setAllowGravity(!0).setSize(1,1),this.scene.physics.add.collider(this.content,e),null===(i=this.content)||void 0===i||i.setAlpha(.5),this.scene.tweens.add({targets:this.content,props:{alpha:1},duration:150,repeat:!1,onComplete:()=>{var e,t;null===(t=null===(e=this.content)||void 0===e?void 0:e.body)||void 0===t||t.setSize(.5*this.content.width,.5*this.content.height)}})}addScore(e){this.scene.events.emit("scoreChanged")}}const g=m;class b extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.initSprite(),this.scene.add.existing(this)}initSprite(){this.isActivated=!1,this.isDying=!1,this.isVulnerable=!0,this.setOrigin(0,0).setFrame(0),this.scene.physics.world.enable(this)}showAndAddScore(e){let t=this.score-e;this.scene.registry.values.score+=t,this.scene.events.emit("scoreChanged");let s=this.scene.add.text(this.x,this.y-20,t.toString()).setOrigin(0,0);this.scene.add.tween({targets:s,props:{y:s.y-25},duration:800,ease:"Power0",yoyo:!1,onComplete:function(){s.destroy()}})}getSpeed(){return this.body.velocity.x}getVulnerable(){return this.isVulnerable}}const f=b;class v extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,e.texture),this.speed=e.bulletProperties.speed,this.setFlipX(e.bulletProperties.flipX),this.scene.add.existing(this),this.initSprite()}initSprite(){this.setOrigin(0,0).setScale(1).setAlpha(1).setY(this.y+8),this.scene.tweens.add({targets:this,props:{alpha:1},duration:200,repeat:!1}),this.scene.physics.world.enableBody(this),this.body.setAllowGravity(!1).setCircle(this.width/4).setOffset(4,4),this.body.setVelocityX(this.speed)}getSpeed(){return this.body.velocity.x}hitObstacle(){this.destroy()}}const w=v;class x extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.transition=new r(this.scene.scene.manager.getScene("HUDScene")),this.scene.add.existing(this),this.setOrigin(0,0),this.scene.physics.world.enable(this),this.body.setImmovable(!0)}checkIn(){this.scene.physics.world.disable(this),this.anims.play("checkpoint-flagout-anims"),this.anims.playAfterRepeat("checkpoint-flagidle-anims"),this.scene.time.delayedCall(2e3,(()=>{this.moveToNextRoom()}))}moveToNextRoom(){this.scene.registry.get("room")!==h?(this.transition.transitionOut(),this.scene.time.delayedCall(750,(()=>{this.scene.registry.set("room","room"+(1*this.scene.registry.get("room").slice(4)+1)),this.scene.scene.manager.getScene("HUDScene").scene.restart(),this.scene.scene.restart()}))):(this.transition.transitionOut(),this.scene.time.delayedCall(750,(()=>{this.scene.scene.stop("GameScene"),this.scene.scene.stop("HUDScene"),this.scene.scene.start("MenuScene")})))}}const S=x;class P extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,e.texture),this.speed=e.bulletProperties.speed,this.setFlipX(e.bulletProperties.flipX),this.scene.add.existing(this),this.initSprite()}initSprite(){this.setOrigin(0,0).setScale(.5).setAlpha(1),this.scene.physics.world.enableBody(this),this.body.setAllowGravity(!1).setCircle(this.width/2),this.body.setVelocityX(this.speed),this.play("dart-anims")}hitObstacle(){this.anims.stop(),this.body.checkCollision.none=!0,this.body.setAllowGravity(!0),this.scene.tweens.add({targets:this,props:{alpha:0},duration:800,repeat:!1,onComplete:()=>{this.destroy()}})}}const k=P,O="idleState",C="jumpState",D="wjumpState",A="fallState",R="moveState",M="dieState",E=class extends class{constructor(){this.neighbors=[]}}{isRightKeyDown(){return this.player.getKeys().get("RIGHT").isDown}isRightKeyUp(){return this.player.getKeys().get("RIGHT").isUp}isLeftKeyDown(){return this.player.getKeys().get("LEFT").isDown}isLeftKeyUp(){return this.player.getKeys().get("LEFT").isUp}isJumpKeyDown(){return this.player.getKeys().get("JUMP").isDown}isJumpKeyUp(){return this.player.getKeys().get("JUMP").isUp}},T=class extends E{constructor(e){super(),this.player=e,this.allowJump=!1}getName(){return O}getNeighbors(){return this.neighbors}addNeighbors(e){this.neighbors.push(e)}onStateEnter(e){this.player.body.setVelocityX(0),this.player.body.setAccelerationX(0),this.player.anims.play("mask-idle-anims"),e&&(this.wallJump=e)}onStateExecution(e){this.isJumpKeyUp()&&(this.allowJump=!0),this.isJumpKeyDown()&&this.allowJump&&(this.player.getState().advance(C),this.allowJump=!1),this.player.body.velocity.y>0?this.player.getState().advance(A):this.isMovingToMoveStateRight()?this.player.getState().advance(R,"right"):this.isMovingToMoveStateLeft()&&this.player.getState().advance(R,"left")}onStateExit(e){this.allowJump=!1}isMovingToMoveStateRight(){return this.isRightKeyDown()&&this.isLeftKeyUp()}isMovingToMoveStateLeft(){return this.isLeftKeyDown()&&this.isRightKeyUp()}},B=class extends E{constructor(e){super(),this.player=e,this.dJump=!1,this.allowDoubleJump=!1}getName(){return C}getNeighbors(){return this.neighbors}addNeighbors(e){this.neighbors.push(e)}onStateEnter(e){this.player.body.setVelocityY(-400),this.player.anims.play("mask-jump-anims"),this.player.dustAnimation.playJump()}onStateExecution(e){this.isJumpKeyUp()&&(this.allowDoubleJump=!0),this.isJumpKeyDown()&&this.allowDoubleJump&&(this.dJump||(this.player.dustAnimation.playJump(),this.dJump=!0,this.player.body.setVelocityY(-350),this.player.anims.play("mask-djump-anims"))),this.isRightKeyDown()&&this.isLeftKeyUp()?(this.player.body.setAccelerationX(this.player.getAcceleration()).setOffset(8,2),this.player.setFlipX(!1)):this.isLeftKeyDown()&&this.isRightKeyUp()?(this.player.body.setAccelerationX(-this.player.getAcceleration()).setOffset(6,2),this.player.setFlipX(!0)):this.isRightKeyUp()&&this.isLeftKeyUp()&&(this.moveTimer&&!this.moveTimer.hasDispatched||(this.moveTimer=this.player.scene.time.delayedCall(50,(()=>{this.player.body.setVelocityX(0),this.player.body.setAccelerationX(0)})))),this.player.body.onFloor()&&this.player.getState().advance(O),this.player.body.velocity.y>0&&this.player.getState().advance(A,this.dJump)}onStateExit(e){this.allowDoubleJump=!1,this.dJump=!1}},K=class extends E{constructor(e){super(),this.player=e,this.isDoubleJump=!1,this.allowDoubleJump=!1}getName(){return A}getNeighbors(){return this.neighbors}addNeighbors(e){this.neighbors.push(e)}onStateEnter(e){this.isDoubleJump=e,this.player.anims.play("mask-fall-anims")}onStateExecution(e){this.isJumpKeyUp()&&(this.allowDoubleJump=!0),this.isJumpKeyDown()&&this.allowDoubleJump&&(this.isDoubleJump||(this.player.dustAnimation.playJump(),this.isDoubleJump=!0,this.player.body.setVelocityY(-350),this.player.anims.play("mask-djump-anims"),this.player.anims.playAfterRepeat("mask-fall-anims"))),this.isRightKeyDown()&&this.isLeftKeyUp()?(this.player.body.setAccelerationX(this.player.getAcceleration()).setOffset(8,2),this.player.setFlipX(!1)):this.isLeftKeyDown()&&this.isRightKeyUp()?(this.player.body.setAccelerationX(-this.player.getAcceleration()).setOffset(6,2),this.player.setFlipX(!0)):(this.isRightKeyUp()&&this.isLeftKeyUp()||this.isRightKeyDown()&&this.isLeftKeyDown())&&(this.player.body.setVelocityX(0),this.player.body.setAccelerationX(0)),this.player.body.onFloor()&&(this.player.dustAnimation.playHitGround(),this.isMovingToMoveStateRight()?this.player.getState().advance(R,"right"):this.isMovingToMoveStateLeft()?this.player.getState().advance(R,"left"):this.player.getState().advance(O)),this.isMovingToWallJumpState()&&this.player.getState().advance(D)}onStateExit(e){this.isDoubleJump=!1,this.allowDoubleJump=!1}isMovingToMoveStateRight(){return this.isRightKeyDown()&&this.isLeftKeyUp()}isMovingToMoveStateLeft(){return this.isLeftKeyDown()&&this.isRightKeyUp()}isMovingToWallJumpState(){return this.player.overlapLeft&&this.player.flipX&&!(this.isRightKeyDown()&&this.isLeftKeyDown())||this.player.overlapRight&&!this.player.flipX&&!(this.isRightKeyDown()&&this.isLeftKeyDown())}},X=class extends E{constructor(e){super(),this.player=e,this.allowJump=!1}getName(){return R}getNeighbors(){return this.neighbors}addNeighbors(e){this.neighbors.push(e)}onStateEnter(e){"left"===e?(this.player.body.setAccelerationX(-this.player.getAcceleration()).setOffset(6,2),this.player.setFlipX(!0)):"right"===e&&(this.player.body.setAccelerationX(this.player.getAcceleration()).setOffset(8,2),this.player.setFlipX(!1)),this.player.anims.play("mask-run-anims",!0)}onStateExecution(e){this.player.dustAnimation.playMove(),this.isJumpKeyUp()&&(this.allowJump=!0),this.isJumpKeyDown()&&this.allowJump&&this.player.getState().advance(C),this.player.body.velocity.y>0?this.player.getState().advance(A):this.isMovingToIdleState()?this.player.getState().advance(O):this.isMovingToMoveStateRight()?this.player.getState().advance(R,"right"):this.isMovingtoMoveStateLeft()&&this.player.getState().advance(R,"left")}onStateExit(e){this.player.dustAnimation.resetCountFrame(),this.allowJump=!1}isMovingToIdleState(){return this.isRightKeyDown()&&this.isLeftKeyDown()||this.isRightKeyUp()&&this.isLeftKeyUp()}isMovingToMoveStateRight(){return this.isRightKeyDown()&&this.isLeftKeyUp()&&this.player.flipX}isMovingtoMoveStateLeft(){return this.isRightKeyUp()&&this.isLeftKeyDown()&&!this.player.flipX}},H=class extends E{constructor(e){super(),this.player=e}getName(){return M}getNeighbors(){return this.neighbors}addNeighbors(e){this.neighbors.push(e)}onStateEnter(e){let t=-(this.player.body.velocity.x-e);this.player.body.stop(),this.player.anims.play("mask-hit-anims"),this.player.body.setVelocityY(-300),this.player.body.setVelocityX(t),this.player.body.checkCollision.up=!1,this.player.body.checkCollision.down=!1,this.player.body.checkCollision.left=!1,this.player.body.checkCollision.right=!1}onStateExecution(e){this.player.flipX?this.player.angle+=1:this.player.angle-=1}onStateExit(e){}},L=class extends E{constructor(e){super(),this.player=e,this.prevOffset=0,this.allowJump=!1}getName(){return D}getNeighbors(){return this.neighbors}addNeighbors(e){this.neighbors.push(e)}onStateEnter(e){this.player.anims.play("mask-walljump-anims"),this.player.dustAnimation.playWallJump(),this.prevOffset=this.player.body.offset.x,this.prePos=this.player.x,this.player.flipX?(this.player.body.setOffset(this.prevOffset+2,this.player.body.offset.y),this.player.setPosition(this.player.x-2,this.player.y)):(this.player.body.setOffset(this.prevOffset-2,this.player.body.offset.y),this.player.setPosition(this.player.x+2,this.player.y))}onStateExecution(e){if(this.player.body.setVelocityY(30),this.isJumpKeyUp()&&(this.allowJump=!0),this.isJumpKeyDown()&&this.allowJump)return this.player.getState().advance(C),void(this.player.flipX?(this.player.setFlipX(!1),this.player.body.setVelocityX(300)):(this.player.setFlipX(!0),this.player.body.setVelocityX(-300)));this.isMovingToFallState()&&this.player.getState().advance(A),this.player.body.onFloor()&&(this.player.dustAnimation.playHitGround(),this.player.flipX?this.player.getState().advance(O,"wj-left"):this.player.getState().advance(O,"wj-right"))}onStateExit(e){this.player.body.setOffset(this.prevOffset,this.player.body.offset.y),this.player.setPosition(this.prePos,this.player.y),this.allowJump=!1}isMovingToFallState(){return!(this.player.overlapLeft||this.player.overlapRight)||this.isRightKeyDown()&&this.player.flipX||this.isLeftKeyDown()&&!this.player.flipX||this.isRightKeyDown()&&this.isLeftKeyDown()}};class N extends Phaser.GameObjects.Sprite{constructor(e,t){super(e.scene,e.x,e.y,e.texture,e.frame),this.projectile=t,this.initSprite(),this.scene.add.existing(this),this.acceleration=700,this.dudeState=new class extends class{}{constructor(e){super();let t=new T(e),s=new B(e),i=new L(e),a=new K(e),h=new X(e),r=new H(e);this.stateList=[t,s,i,h,r],t.addNeighbors(s),t.addNeighbors(h),t.addNeighbors(r),t.addNeighbors(a),s.addNeighbors(t),s.addNeighbors(r),s.addNeighbors(h),s.addNeighbors(a),s.addNeighbors(i),i.addNeighbors(s),i.addNeighbors(t),i.addNeighbors(h),i.addNeighbors(a),i.addNeighbors(r),h.addNeighbors(s),h.addNeighbors(r),h.addNeighbors(t),h.addNeighbors(h),h.addNeighbors(a),a.addNeighbors(t),a.addNeighbors(s),a.addNeighbors(h),a.addNeighbors(r),a.addNeighbors(i),this.current=t,this.exitState=r,this.current.onStateEnter()}currentState(){return this.current}possibleTransitions(){let e=[];return this.current.getNeighbors().forEach((t=>{e.push(t.getName())})),e}advance(e,t){return this.current.getNeighbors().forEach((s=>{if(s.getName()==e)return this.current.onStateExit(t),this.current=s,this.current.onStateEnter(t),!0})),!1}isComplete(){return this.current==this.exitState}}(this),this.dustAnimation=new class{constructor(e){this.source=e,this.scene=e.scene,this.countFrame=11,this.initEmitter(),this.createHitGroundEmitter(),this.createJumpEmitter(),this.createMoveEmitter(),this.createWallJumpEmitter()}initEmitter(){this.jumpEmitterManager=this.scene.add.particles("dust"),this.hitGroundEmitterManager=this.scene.add.particles("dust"),this.moveEmitterManager=this.scene.add.particles("dust")}createJumpEmitter(){this.jumpEmitterManager.createEmitter({speed:{min:-100,max:100},angle:{min:0,max:180,steps:3},alpha:{start:1,end:.5},lifespan:200,blendMode:"SCREEN",scale:{start:1,end:0},quantity:3,on:!1})}createHitGroundEmitter(){this.hitGroundEmitterManager.createEmitter({speed:100,angle:{min:-10,max:10,steps:2},alpha:{start:1,end:0},scale:{start:.2,end:1},lifespan:200,blendMode:"SCREEN",quantity:2,on:!1}),this.hitGroundEmitterManager.createEmitter({speed:-100,angle:{min:170,max:190,steps:2},alpha:{start:1,end:0},scale:{start:.2,end:1},lifespan:200,blendMode:"SCREEN",quantity:2,on:!1})}createMoveEmitter(){this.moveLeftEmitter=this.moveEmitterManager.createEmitter({speed:100,angle:{min:-10,max:0,steps:2},alpha:{start:1,end:0},scale:{start:.2,end:1},lifespan:200,blendMode:"SCREEN",quantity:2,on:!1}),this.moveRightEmitter=this.moveEmitterManager.createEmitter({speed:-100,angle:{min:180,max:190,steps:2},alpha:{start:1,end:0},scale:{start:.2,end:1},lifespan:200,blendMode:"SCREEN",quantity:2,on:!1})}createWallJumpEmitter(){this.wallJumpEmitter=this.jumpEmitterManager.createEmitter({speed:100,angle:90,alpha:{start:1,end:0},scale:{start:.2,end:1},lifespan:200,blendMode:"SCREEN",quantity:2,on:!1})}resetCountFrame(){this.countFrame=11}playJump(){let e=this.source.x+.5*this.source.width,t=this.source.y;this.jumpEmitterManager.emitParticleAt(e,t)}playMove(){let e=this.source.x+.5*this.source.width,t=this.source.y+this.source.height;this.countFrame+=1,this.countFrame>10&&(this.countFrame=0,this.source.flipX?this.moveLeftEmitter.emitParticleAt(e,t):this.moveRightEmitter.emitParticleAt(e,t))}playHitGround(){let e=this.source.x+.5*this.source.width,t=this.source.y+this.source.height;this.hitGroundEmitterManager.emitParticleAt(e,t)}playWallJump(){let e=this.source.x,t=this.source.y+this.source.height;this.source.flipX?this.wallJumpEmitter.emitParticleAt(e+4,t):this.wallJumpEmitter.emitParticleAt(e+this.source.width-4,t)}}(this),this.create2ndBody()}getKeys(){return this.keys}getAcceleration(){return this.acceleration}getState(){return this.dudeState}create2ndBody(){const e=this.scene.physics.add.image();e.body.setSize(.7*this.width,.8*this.height),e.body.setAllowGravity(!1),e.setDebugBodyColor(16776960),this.virtualPlayer=e}initSprite(){this.setOrigin(0,0).setDepth(5),this.x<this.scene.cameras.main.width?this.setFlipX(!0):this.setFlipX(!1),this.keys=new Map([["LEFT",this.addKey("LEFT")],["RIGHT",this.addKey("RIGHT")],["THROW",this.addKey("SPACE")],["JUMP",this.addKey("UP")]]),this.scene.physics.world.enable(this),this.body.maxVelocity.x=150,this.body.setSize(.6*this.width,.95*this.height).setOffset(6,2)}addKey(e){return this.scene.input.keyboard.addKey(e)}update(){var e;this.dudeState.currentState().onStateExecution(),Phaser.Input.Keyboard.JustDown(null===(e=this.keys)||void 0===e?void 0:e.get("THROW"))&&this.throwDart(),this.y>this.scene.registry.get("mapHeight")+50&&(this.scene.scene.restart(),this.scene.registry.values.score=0,this.scene.events.emit("scoreChanged")),this.virtualPlayer.setVelocity(0,0),this.virtualPlayer.body.position.set(this.body.x-1.5,this.body.y+3),this.virtualPlayer.body.updateCenter(),this.overlapRight=!1,this.overlapLeft=!1}throwDart(){let e=new k({scene:this.scene,x:this.x,y:this.y,bulletProperties:{speed:450*(this.flipX?-1:1),flipX:!this.flipX},texture:"darts"});this.projectile.add(e)}bounceUpAfterHitTargetOnHead(){this.dudeState.advance(C)}gotHit(e){this.dudeState.advance(M,e)}}const F=N;class J extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.initSprite(),this.scene.add.existing(this)}initSprite(){this.setOrigin(0,0).setFrame(0),this.scene.physics.world.enable(this),this.body.setAllowGravity(!1).setImmovable(!0)}setUpDirection(){this.body.setSize(.7*this.width,.5*this.height).setOffset(2,8)}setDownDirection(){this.setFlipY(!0),this.body.setSize(.7*this.width,.5*this.height).setOffset(2,0)}setLeftDirection(){this.setAngle(-90).setPosition(this.x,this.y+this.width),this.body.setSize(.5*this.height,.7*this.width).setOffset(.5*this.width,-14)}}const U=J,j=class extends f{constructor(e){super(e),this.states={idle:"idle",activated:"activated",die:"die"},this.isDead=()=>{this.destroy()},this.speed=40,this.score=500,this.currentState=this.states.idle,this.body.setSize(.6*this.width,.4*this.height).setOffset(6,18),this.anims.play("mushroom-idle-anims")}update(){this.isDying?this.currentState!=this.states.die&&(this.body.checkCollision.none=!0,this.currentState=this.states.die):this.isActivated?((this.body.blocked.right||this.body.blocked.left)&&(this.speed=-this.speed,this.body.velocity.x=this.speed,this.speed>0?this.setFlipX(!0):this.setFlipX(!1)),this.currentState!=this.states.activated&&(this.currentState=this.states.activated,this.body.setVelocityX(-this.speed),this.anims.play("mushroom-run-anims",!0))):Phaser.Geom.Intersects.RectangleToRectangle(this.getBounds(),this.scene.cameras.main.worldView)&&(this.isActivated=!0)}gotHitOnHead(){this.isDying=!0,this.anims.play("mushroom-hit-anims"),this.showAndAddScore(0),this.scene.add.tween({targets:this,props:{alpha:0},duration:1e3,ease:"Power0",yoyo:!1,onComplete:this.isDead})}gotHitFromBullet(e){this.isDying=!0,this.anims.play("mushroom-hit-anims"),this.showAndAddScore(500),this.body.setVelocityX(e),this.scene.add.tween({targets:this,props:{alpha:0},duration:1e3,ease:"Power0",yoyo:!1,onComplete:this.isDead})}},G=class extends f{constructor(e,t,s){super(e),this.states={live:"live",die:"die"},this.shoot=()=>{let e=new w({scene:this.scene,x:this.x,y:this.y,bulletProperties:{speed:200*(this.flipX?1:-1),flipX:this.flipX},texture:"plant-bullet"});this.flipX||e.setX(e.x+.5*this.width+e.body.offset.x),this.projectile.add(e)},this.isDead=()=>{this.destroy()},this.score=500,this.projectile=s,this.shootRate=180,this.countFrame=0,this.currentState=this.states.live,this.body.setSize(.6*this.width,.8*this.height),"right"===t?(this.setFlipX(!0),this.body.setOffset(6,8)):(this.setFlipX(!1),this.body.setOffset(12,8)),this.anims.play("plant-idle-anims")}update(e,t){this.isDying?this.currentState!=this.states.die&&(this.body.checkCollision.none=!0,this.currentState=this.states.die):(this.countFrame+=1,this.countFrame==this.shootRate&&(this.countFrame=0,this.anims.play("plant-attack-anims"),this.scene.time.delayedCall(90,this.shoot),this.anims.playAfterRepeat("plant-idle-anims")))}gotHitFromBullet(e){this.isDying=!0,this.anims.play("plant-hit-anims"),this.showAndAddScore(500),this.body.setVelocityX(e),this.scene.add.tween({targets:this,props:{alpha:0},duration:1e3,ease:"Power0",yoyo:!1,onComplete:this.isDead})}gotHitOnHead(){this.isDying=!0,this.anims.play("plant-hit-anims"),this.showAndAddScore(0),this.scene.add.tween({targets:this,props:{alpha:0},duration:1e3,ease:"Power0",yoyo:!1,onComplete:this.isDead})}},I=class extends f{constructor(e,t,s){super(e),this.states={idle:"idle",activating:"activating",activated:"activated",die:"die"},this.baseHealth=20,this.isDead=()=>{this.destroy()},this.speed=150,this.score=5e3,this.health=this.baseHealth,this.landmark=t,this.isVulnerable=!1,this.target=s,this.title=this.scene.add.text(this.x+10,this.y+this.height+15,"Louis de Rino").setOrigin(0,0).setFontFamily("Arial").setFontSize(10).setColor("#ffff00"),this.createHealthBar(),this.currentState=this.states.idle,this.setScale(1.5),this.body.setSize(.8*this.width,.8*this.height).setOffset(this.body.offset.x,6),this.anims.play("rino-idle-anims")}update(){this.isDying?(this.currentState!=this.states.die&&this.handleDie(),this.body.velocity.x=0,this.anims.stop()):(this.displayInfo(),this.isActivated?((this.body.blocked.right||this.body.blocked.left)&&this.handleTurn(),this.currentState!=this.states.activated&&this.handleActivated()):Phaser.Geom.Intersects.RectangleToRectangle(this.getBounds(),this.scene.cameras.main.worldView)&&this.currentState!=this.states.activating&&this.handleActivating())}displayInfo(){this.title.setPosition(this.x+10,this.y+this.height+15),this.healthBar.destroy(),this.remainHealthBar.destroy(),this.createHealthBar()}createHealthBar(){this.healthBar=this.scene.add.graphics(),this.healthBar.fillStyle(16777215,1),this.healthBar.fillRect(this.x+15,this.y+this.height+30,this.width,8),this.remainHealthBar=this.scene.add.graphics(),this.remainHealthBar.fillStyle(8971347,1),this.remainHealthBar.fillRect(this.x+15,this.y+this.height+30,this.width*(this.health/this.baseHealth),8)}gotHitFromBullet(e){this.health-=1,this.score=0,this.anims.play("rino-hit-anims"),this.health<=0?this.handleDying():this.handleHitted()}gotHitOnHead(){this.health-=1,this.anims.play("rino-hit-anims"),this.health<=0?this.handleDying():this.handleHitted()}handleDying(){this.isDying=!0,this.showAndAddScore(0),this.scene.add.tween({targets:this,props:{alpha:0},duration:1e3,ease:"Power0",onComplete:()=>{this.landmark.add(new S({scene:this.scene,x:this.x,y:this.y-20,texture:"checkpoint-noflag"})),this.isDead()}})}handleHitted(){0!=this.body.velocity.x?(this.body.setVelocityX(0),this.scene.time.delayedCall(500,(()=>{this.anims.play("rino-run-anims"),this.body.setVelocityX(this.speed)}))):this.anims.playAfterRepeat("rino-idle-anims")}handleTurn(){this.anims.play("rino-hitwall-anims"),this.anims.playAfterRepeat("rino-idle-anims"),this.scene.time.delayedCall(1e3,(()=>{this.anims.play("rino-run-anims"),this.speed=-this.speed,this.body.velocity.x=this.speed,this.isVulnerable||(this.isVulnerable=!0),this.speed>0?this.setFlipX(!0):this.setFlipX(!1)}))}handleActivating(){this.currentState=this.states.activating,this.scene.time.delayedCall(500,(()=>{this.x<this.target.x?(this.setFlipX(!0),this.speed=-this.speed):this.setFlipX(!1),this.isActivated=!0}))}handleActivated(){this.currentState=this.states.activated,this.body.setVelocityX(-this.speed),this.anims.play("rino-run-anims")}handleDie(){this.title.setPosition(this.x+10,this.y+this.height+15),this.healthBar.destroy(),this.remainHealthBar.destroy(),this.createHealthBar(),this.currentState=this.states.die,this.body.checkCollision.none=!0,this.body.setAllowGravity(!1)}};class V extends Phaser.Scene{constructor(){super({key:"PlayScene"})}preload(){}init(){}create(){this.map=this.make.tilemap({key:this.registry.get("room")}),this.terrainTile=this.map.addTilesetImage("terrain","terrain");let e="";this.map.tilesets.forEach((t=>{-1!=t.name.search("background")&&(e=t.name)})),this.backgroundTile=this.map.addTilesetImage(e,e),this.backgroundLayer=this.map.createLayer("backgroundLayer",this.backgroundTile),this.terrainLayer=this.map.createLayer("terrainLayer",this.terrainTile),this.terrainLayer.setName("terrainLayer"),this.terrainLayer.setCollisionByProperty({collide:!0}),this.registry.set("mapHeight",this.map.heightInPixels),this.initObjectsGroup(),this.loadObjectsFromTilemap(),this.gameManager=new class{constructor(e){this.handlePlayerHitProjectile=(e,t)=>{e instanceof F&&t instanceof w&&(e.gotHit(t.getSpeed()),t.hitObstacle())},this.handleLandmarkOverlap=(e,t)=>{e instanceof F&&t instanceof S&&t.checkIn()},this.handleProjectileCollideMobs=(e,t)=>{e instanceof k&&t instanceof f&&(t.getVulnerable()&&t.gotHitFromBullet(e.body.velocity.x),e.hitObstacle())},this.handlePlayerMobsOverlap=(e,t)=>{e instanceof F&&t instanceof f&&(e.body.touching.down&&t.body.touching.up?(e.bounceUpAfterHitTargetOnHead(),t.getVulnerable()&&t.gotHitOnHead()):e.gotHit(t.getSpeed()))},this.handlePlayerHitTrap=(e,t)=>{e instanceof F&&t instanceof U&&e.gotHit(0)},this.handlePlayerHitBox=(e,t)=>{e instanceof F&&t instanceof g&&(t.body.touching.down||t.body.touching.up)&&t.active&&(t.body.touching.up&&e.bounceUpAfterHitTargetOnHead(),this.scene.physics.world.disable(t),t.playHitAnims(),this.scene.fruits.add(t.spawnBoxContent()),t.popUpFruit(this.scene.terrainLayer))},this.handleFruitOverlap=(e,t)=>{e instanceof F&&t instanceof u&&t.collected()},this.handleProjectileCollide=(e,t)=>{(e instanceof k||e instanceof w)&&e.hitObstacle()},this.scene=e,this.scene.physics.add.collider(this.scene.player,this.scene.terrainLayer),this.scene.physics.add.overlap(this.scene.player.virtualPlayer,this.scene.terrainLayer,((e,t)=>{if(t instanceof Phaser.Tilemaps.Tile&&e instanceof Phaser.GameObjects.Image&&t.index>=0)return this.scene.player.overlapRight=e.x<t.getCenterX()||this.scene.player.overlapRight,void(this.scene.player.overlapLeft=e.x>t.getCenterX()||this.scene.player.overlapLeft)})),this.scene.physics.add.overlap(this.scene.player.virtualPlayer,this.scene.boxes,((e,t)=>{t instanceof Phaser.GameObjects.Sprite&&e instanceof Phaser.GameObjects.Image&&(this.scene.player.overlapRight=e.x<t.x||this.scene.player.overlapRight,this.scene.player.overlapLeft=e.x>t.x||this.scene.player.overlapLeft)})),this.scene.physics.add.collider(this.scene.player,this.scene.bars),this.scene.physics.add.overlap(this.scene.player,this.scene.landmark,this.handleLandmarkOverlap),this.scene.physics.add.collider(this.scene.landmark,this.scene.terrainLayer),this.scene.physics.add.collider(this.scene.player,this.scene.boxes,this.handlePlayerHitBox),this.scene.physics.add.overlap(this.scene.player,this.scene.traps,this.handlePlayerHitTrap),this.scene.physics.add.overlap(this.scene.player,this.scene.fruits,this.handleFruitOverlap),this.scene.physics.add.collider(this.scene.projectiles,this.scene.terrainLayer,this.handleProjectileCollide),this.scene.physics.add.collider(this.scene.projectiles,this.scene.boxes,this.handleProjectileCollide),this.scene.physics.add.collider(this.scene.mobs,this.scene.terrainLayer),this.scene.physics.add.overlap(this.scene.player,this.scene.mobs,this.handlePlayerMobsOverlap),this.scene.physics.add.overlap(this.scene.projectiles,this.scene.mobs,this.handleProjectileCollideMobs),this.scene.physics.add.overlap(this.scene.player,this.scene.mobProjectiles,this.handlePlayerHitProjectile),this.scene.physics.add.collider(this.scene.mobProjectiles,this.scene.terrainLayer,this.handleProjectileCollide)}}(this),this.cameras.main.startFollow(this.player),this.cameras.main.setBounds(0,0,this.map.widthInPixels,this.map.heightInPixels)}initObjectsGroup(){this.boxes=this.add.group({runChildUpdate:!0}),this.fruits=this.add.group({runChildUpdate:!0}),this.traps=this.add.group({runChildUpdate:!0}),this.projectiles=this.add.group({runChildUpdate:!0}),this.mobs=this.add.group({runChildUpdate:!0}),this.bars=this.add.group({runChildUpdate:!0}),this.mobProjectiles=this.add.group({runChildUpdate:!0}),this.landmark=this.add.group({runChildUpdate:!0})}loadObjectsFromTilemap(){const e=this.map.getObjectLayer("objects").objects,t=new class{constructor(e){this.scene=e}createBox(e,t,s){let i=new g({scene:this.scene,content:s,x:e,y:t,texture:"box1-idle"});return this.scene.boxes.add(i),i}createFruit(e,t,s){let i=new u({scene:this.scene,x:e,y:t,texture:s,points:100});return this.scene.fruits.add(i),i}createSpikes(e,t,s){let i=new U({scene:this.scene,x:e,y:t,texture:"spikes"});return"up"===s?i.setUpDirection():"down"===s?i.setDownDirection():"left"===s&&i.setLeftDirection(),this.scene.traps.add(i),i}createPlayer(e,t){return new F({scene:this.scene,x:e,y:t,texture:"mask-idle"},this.scene.projectiles)}createMushroom(e,t){let s=new j({scene:this.scene,x:e,y:t,texture:"mushroom-idle"});return this.scene.mobs.add(s),s}createRino(e,t){let s=new I({scene:this.scene,x:e,y:t,texture:"rino-idle"},this.scene.landmark,this.scene.player);return this.scene.mobs.add(s),s}createPlant(e,t,s){let i=new G({scene:this.scene,x:e,y:t,texture:"plant-idle"},s,this.scene.mobProjectiles);return this.scene.mobs.add(i),i}createBar(e,t,s){let i=this.scene.physics.add.image(e,t,s);return i.setOrigin(0,0),i.body.setAllowGravity(!1),i.body.setImmovable(!0),i.body.checkCollision.down=!1,i.body.checkCollision.right=!1,i.body.checkCollision.left=!1,this.scene.bars.add(i),i}createLandmark(e,t){let s=new S({scene:this.scene,x:e,y:t,texture:"checkpoint-noflag"});return this.scene.landmark.add(s),s}}(this);e.forEach((e=>{"box"===e.name&&t.createBox(e.x,e.y,e.properties[0].value),"fruit"===e.name&&t.createFruit(e.x,e.y,e.properties[0].value),"trap"===e.name&&"spikes"===e.properties[1].value&&t.createSpikes(e.x,e.y,e.properties[0].value),"player"===e.name&&(this.player=t.createPlayer(e.x,e.y)),"mob"===e.name&&("mushroom"===e.properties[0].value?t.createMushroom(e.x,e.y):"rino"===e.properties[0].value?t.createRino(e.x,e.y):"plant"===e.properties[1].value&&t.createPlant(e.x,e.y,e.properties[0].value)),"bar"===e.name&&t.createBar(e.x,e.y,`bar-${e.properties[0].value}-${e.width}`),"checkpoint"===e.name&&t.createLandmark(e.x,e.y)}))}update(){this.player.update()}}const z=V,Y={type:Phaser.AUTO,backgroundColor:"#ffffff",scale:{parent:"phaser-game",autoCenter:Phaser.Scale.CENTER_BOTH,width:512,height:288,zoom:1.8},scene:[a,p,z,c],physics:{default:"arcade",arcade:{debug:!1,gravity:{y:1200}}},render:{pixelArt:!0}};window.addEventListener("load",(()=>{new Phaser.Game(Y)}))},204:()=>{console.log("%c %c %c %c %c Built using phaser-project-template %c https://github.com/yandeu/phaser-project-template","background: #ff0000","background: #ffff00","background: #00ff00","background: #00ffff","color: #fff; background: #000000;","background: none")}},s={};function i(e){var a=s[e];if(void 0!==a)return a.exports;var h=s[e]={exports:{}};return t[e].call(h.exports,h,h.exports,i),h.exports}i.m=t,e=[],i.O=(t,s,a,h)=>{if(!s){var r=1/0;for(c=0;c<e.length;c++){for(var[s,a,h]=e[c],n=!0,o=0;o<s.length;o++)(!1&h||r>=h)&&Object.keys(i.O).every((e=>i.O[e](s[o])))?s.splice(o--,1):(n=!1,h<r&&(r=h));if(n){e.splice(c--,1);var l=a();void 0!==l&&(t=l)}}return t}h=h||0;for(var c=e.length;c>0&&e[c-1][2]>h;c--)e[c]=e[c-1];e[c]=[s,a,h]},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0};i.O.j=t=>0===e[t];var t=(t,s)=>{var a,h,[r,n,o]=s,l=0;if(r.some((t=>0!==e[t]))){for(a in n)i.o(n,a)&&(i.m[a]=n[a]);if(o)var c=o(i)}for(t&&t(s);l<r.length;l++)h=r[l],i.o(e,h)&&e[h]&&e[h][0](),e[h]=0;return i.O(c)},s=self.webpackChunkphaser_project_template=self.webpackChunkphaser_project_template||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))})(),i.O(void 0,[216],(()=>i(829)));var a=i.O(void 0,[216],(()=>i(204)));a=i.O(a)})();